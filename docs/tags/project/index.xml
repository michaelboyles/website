<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>project on Michael Boyles</title><link>https://boyl.es/tags/project/</link><description>Recent content in project on Michael Boyles</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 13 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://boyl.es/tags/project/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding control flow to JSX with TypeScript</title><link>https://boyl.es/post/add-control-flow-to-jsx/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://boyl.es/post/add-control-flow-to-jsx/</guid><description>&lt;p>In any non-trivial React project, one of the things you&amp;rsquo;ll eventually need to do is render something conditionally.
You &lt;a href="https://react-cn.github.io/react/tips/if-else-in-JSX.html">can&amp;rsquo;t use if-else statements within JSX&lt;/a>. You can use
the conditional (“ternary”) operator but I often find that it produces code that&amp;rsquo;s hard to read. I&amp;rsquo;ve developed a
transform which adds special meaning to certain JSX tags, allowing you to write &lt;code>&amp;lt;If&amp;gt;&lt;/code> and &lt;code>&amp;lt;Else&amp;gt;&lt;/code> blocks which behave
intuitively.&lt;/p></description></item></channel></rss>