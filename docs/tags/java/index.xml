<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Michael Boyles</title><link>https://boyl.es/tags/java/</link><description>Recent content in java on Michael Boyles</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 04 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://boyl.es/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>A simple, compile-time dependency injection framework</title><link>https://boyl.es/post/simple-di/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate><guid>https://boyl.es/post/simple-di/</guid><description>&lt;p>The most popular &lt;a href="https://en.wikipedia.org/wiki/Dependency_injection">dependency injection&lt;/a> frameworks in Java —
Spring and Guice — are built using reflection. There are some problems with this approach, and I believe that a
compile-time solution is better in most cases. There are already compile-time implementations (e.g.
&lt;a href="https://github.com/google/dagger">Dagger&lt;/a>), but I wanted to write
&lt;a href="https://github.com/michaelboyles/simple-di">my own bare-bones implementation&lt;/a>. It&amp;rsquo;s not designed to be used in real
projects, but as an illustrative example of how such an implementation can work.&lt;/p></description></item><item><title>Using two versions of a library in Java</title><link>https://boyl.es/post/two-versions-same-library/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><guid>https://boyl.es/post/two-versions-same-library/</guid><description>&lt;p>Java and its build tools aren&amp;rsquo;t designed to support using two different versions of the same library at runtime.
Generally, that&amp;rsquo;s a conflict that&amp;rsquo;s automatically resolved to one or the other, and that&amp;rsquo;s exactly what we want. But
what if it&amp;rsquo;s not? With a few tricks, it&amp;rsquo;s possible to circumvent that behaviour.&lt;/p></description></item></channel></rss>